"local Players = game:GetService(\"Players\")\r\nlocal UserInputService = game:GetService(\"UserInputService\")\r\nlocal RunService = game:GetService(\"RunService\")\r\nlocal TweenService = game:GetService(\"TweenService\")\r\nlocal Camera = workspace.CurrentCamera\r\n\r\nlocal player = Players.LocalPlayer\r\nlocal character = player.Character or player.CharacterAdded:Wait()\r\nlocal humanoid = character:WaitForChild(\"Humanoid\")\r\nlocal rootPart = character:WaitForChild(\"HumanoidRootPart\")\r\n\r\n\r\nlocal ScreenGui = Instance.new(\"ScreenGui\")\r\nScreenGui.Parent = game.CoreGui\r\n\r\nlocal LoadingFrame = Instance.new(\"Frame\")\r\nLoadingFrame.Parent = ScreenGui\r\nLoadingFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)\r\nLoadingFrame.Size = UDim2.new(0, 250, 0, 80)\r\nLoadingFrame.Position = UDim2.new(0.5, -125, 0.5, -40)\r\nLoadingFrame.Visible = true\r\n\r\nlocal LoadingText = Instance.new(\"TextLabel\")\r\nLoadingText.Parent = LoadingFrame\r\nLoadingText.Text = \"Mono (Undetected) Loading...\"\r\nLoadingText.Font = Enum.Font.SourceSansBold\r\nLoadingText.TextSize = 16\r\nLoadingText.TextColor3 = Color3.fromRGB(255, 255, 255)\r\nLoadingText.Size = UDim2.new(1, 0, 1, 0)\r\nLoadingText.BackgroundTransparency = 1\r\n\r\n\r\nlocal tweenInfo = TweenInfo.new(2, Enum.EasingStyle.Linear, Enum.EasingDirection.Out, -1, true)\r\nlocal tween = TweenService:Create(LoadingText, tweenInfo, {TextTransparency = 0.3})\r\ntween:Play()\r\n\r\nwait(3) -- Simulate loading time\r\nLoadingFrame.Visible = false\r\n\r\nlocal Frame = Instance.new(\"Frame\")\r\nFrame.Parent = ScreenGui\r\nFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)\r\nFrame.Size = UDim2.new(0, 240, 0, 260) -- Increased height for more buttons\r\nFrame.Position = UDim2.new(0, 50, 0, 50)\r\nFrame.Active = true\r\nFrame.Draggable = true\r\n\r\nlocal Title = Instance.new(\"TextLabel\")\r\nTitle.Parent = Frame\r\nTitle.Text = \"Mono Hub (UNDETECTED)\"\r\nTitle.Size = UDim2.new(1, 0, 0, 20)\r\nTitle.BackgroundColor3 = Color3.fromRGB(50, 50, 50)\r\nTitle.TextColor3 = Color3.fromRGB(255, 255, 255)\r\nTitle.Font = Enum.Font.SourceSansBold\r\nTitle.TextSize = 14\r\n\r\nlocal FlyButton = Instance.new(\"TextButton\")\r\nFlyButton.Parent = Frame\r\nFlyButton.Size = UDim2.new(1, 0, 0, 40)\r\nFlyButton.Position = UDim2.new(0, 0, 0, 30)\r\nFlyButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)\r\nFlyButton.TextColor3 = Color3.fromRGB(255, 255, 255)\r\nFlyButton.Font = Enum.Font.SourceSansBold\r\nFlyButton.TextSize = 16\r\nFlyButton.Text = \"Enable Fly\"\r\n\r\nlocal NoJumpCooldownButton = Instance.new(\"TextButton\")\r\nNoJumpCooldownButton.Parent = Frame\r\nNoJumpCooldownButton.Size = UDim2.new(1, 0, 0, 40)\r\nNoJumpCooldownButton.Position = UDim2.new(0, 0, 0, 75)\r\nNoJumpCooldownButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)\r\nNoJumpCooldownButton.TextColor3 = Color3.fromRGB(255, 255, 255)\r\nNoJumpCooldownButton.Font = Enum.Font.SourceSansBold\r\nNoJumpCooldownButton.TextSize = 16\r\nNoJumpCooldownButton.Text = \"No Jump Cooldown\"\r\n\r\nlocal ChamsButton = Instance.new(\"TextButton\")\r\nChamsButton.Parent = Frame\r\nChamsButton.Size = UDim2.new(1, 0, 0, 40)\r\nChamsButton.Position = UDim2.new(0, 0, 0, 120)\r\nChamsButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)\r\nChamsButton.TextColor3 = Color3.fromRGB(255, 255, 255)\r\nChamsButton.Font = Enum.Font.SourceSansBold\r\nChamsButton.TextSize = 16\r\nChamsButton.Text = \"Enable Chams\"\r\n\r\nlocal TracersButton = Instance.new(\"TextButton\")\r\nTracersButton.Parent = Frame\r\nTracersButton.Size = UDim2.new(1, 0, 0, 40)\r\nTracersButton.Position = UDim2.new(0, 0, 0, 165)\r\nTracersButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)\r\nTracersButton.TextColor3 = Color3.fromRGB(255, 255, 255)\r\nTracersButton.Font = Enum.Font.SourceSansBold\r\nTracersButton.TextSize = 16\r\nTracersButton.Text = \"Enable Tracers\"\r\n\r\nlocal AimlockButton = Instance.new(\"TextButton\")\r\nAimlockButton.Parent = Frame\r\nAimlockButton.Size = UDim2.new(1, 0, 0, 40)\r\nAimlockButton.Position = UDim2.new(0, 0, 0, 210)\r\nAimlockButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)\r\nAimlockButton.TextColor3 = Color3.fromRGB(255, 255, 255)\r\nAimlockButton.Font = Enum.Font.SourceSansBold\r\nAimlockButton.TextSize = 16\r\nAimlockButton.Text = \"Enable Aimlock\"\r\n\r\n\r\nlocal plr = game.Players.LocalPlayer\r\nlocal mouse = plr:GetMouse()\r\n\r\nlocal localplayer = plr\r\n\r\nif workspace:FindFirstChild(\"Core\") then\r\n    workspace.Core:Destroy()\r\nend\r\n\r\nlocal Core = Instance.new(\"Part\")\r\nCore.Name = \"Core\"\r\nCore.Size = Vector3.new(0.05, 0.05, 0.05)\r\n\r\nspawn(function()\r\n    Core.Parent = workspace\r\n    local Weld = Instance.new(\"Weld\", Core)\r\n    Weld.Part0 = Core\r\n    Weld.Part1 = localplayer.Character.LowerTorso\r\n    Weld.C0 = CFrame.new(0, 0, 0)\r\nend)\r\n\r\nworkspace:WaitForChild(\"Core\")\r\n\r\nlocal torso = workspace.Core\r\nlocal flying = false\r\nlocal speed = 10\r\nlocal keys = {a = false, d = false, w = false, s = false}\r\nlocal e1, e2\r\n\r\nlocal function start()\r\n    local pos = Instance.new(\"BodyPosition\", torso)\r\n    local gyro = Instance.new(\"BodyGyro\", torso)\r\n    pos.Name = \"EPIXPOS\"\r\n    pos.maxForce = Vector3.new(math.huge, math.huge, math.huge)\r\n    pos.position = torso.Position\r\n    gyro.maxTorque = Vector3.new(9e9, 9e9, 9e9)\r\n    gyro.cframe = torso.CFrame\r\n\r\n    repeat\r\n        wait()\r\n        localplayer.Character.Humanoid.PlatformStand = true\r\n        local new = gyro.cframe - gyro.cframe.p + pos.position\r\n\r\n        if not keys.w and not keys.s and not keys.a and not keys.d then\r\n            speed = 5\r\n        end\r\n\r\n        if keys.w then\r\n            new = new + workspace.CurrentCamera.CoordinateFrame.lookVector * speed\r\n        end\r\n        if keys.s then\r\n            new = new - workspace.CurrentCamera.CoordinateFrame.lookVector * speed\r\n        end\r\n        if keys.d then\r\n            new = new * CFrame.new(speed, 0, 0)\r\n        end\r\n        if keys.a then\r\n            new = new * CFrame.new(-speed, 0, 0)\r\n        end\r\n\r\n        if speed > 10 then\r\n            speed = 5\r\n        end\r\n\r\n        pos.position = new.p\r\n\r\n        if keys.w then\r\n            gyro.cframe = workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad(speed * 0), 0, 0)\r\n        elseif keys.s then\r\n            gyro.cframe = workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(math.rad(speed * 0), 0, 0)\r\n        else\r\n            gyro.cframe = workspace.CurrentCamera.CoordinateFrame\r\n        end\r\n    until flying == false\r\n\r\n    if gyro then gyro:Destroy() end\r\n    if pos then pos:Destroy() end\r\n    flying = false\r\n    localplayer.Character.Humanoid.PlatformStand = false\r\n    speed = 10\r\nend\r\n\r\nlocal function toggleFly()\r\n    flying = not flying\r\n    if flying then\r\n        start()\r\n        FlyButton.Text = \"Disable Fly\"\r\n        FlyButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)\r\n    else\r\n        flying = false\r\n        FlyButton.Text = \"Enable Fly\"\r\n        FlyButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)\r\n    end\r\nend\r\n\r\nFlyButton.MouseButton1Click:Connect(toggleFly)\r\n\r\ne1 = mouse.KeyDown:Connect(function(key)\r\n    if not torso or not torso.Parent then\r\n        flying = false\r\n        e1:Disconnect()\r\n        e2:Disconnect()\r\n        return\r\n    end\r\n    if key == \"w\" then\r\n        keys.w = true\r\n    elseif key == \"s\" then\r\n        keys.s = true\r\n    elseif key == \"a\" then\r\n        keys.a = true\r\n    elseif key == \"d\" then\r\n        keys.d = true\r\n    elseif key == \"x\" then\r\n        toggleFly()\r\n    end\r\nend)\r\n\r\ne2 = mouse.KeyUp:Connect(function(key)\r\n    if key == \"w\" then\r\n        keys.w = false\r\n    elseif key == \"s\" then\r\n        keys.s = false\r\n    elseif key == \"a\" then\r\n        keys.a = false\r\n    elseif key == \"d\" then\r\n        keys.d = false\r\n    end\r\nend)\r\n\r\n-- No Jump Cooldown Function\r\nlocal noJumpCooldownEnabled = false\r\n\r\nlocal function toggleNoJumpCooldown(enabled)\r\n    local player = game.Players.LocalPlayer\r\n    local character = player.Character or player.CharacterAdded:Wait()\r\n    local humanoid = character:WaitForChild(\"Humanoid\")\r\n\r\n    -- Helper function to update the humanoid's jump settings\r\n    local function updateJumpSettings(humanoid, state)\r\n        humanoid.UseJumpPower = not state -- Disable cooldown when `enabled` is true\r\n        print(\"Jump cooldown \" .. (state and \"disabled!\" or \"enabled!\"))\r\n    end\r\n\r\n    updateJumpSettings(humanoid, enabled)\r\n\r\n    -- Monitor for respawn and reapply the no jump cooldown setting if enabled\r\n    player.CharacterAdded:Connect(function(newCharacter)\r\n        local newHumanoid = newCharacter:WaitForChild(\"Humanoid\")\r\n        updateJumpSettings(newHumanoid, enabled)\r\n    end)\r\nend\r\n\r\nNoJumpCooldownButton.MouseButton1Click:Connect(function()\r\n    noJumpCooldownEnabled = not noJumpCooldownEnabled\r\n    toggleNoJumpCooldown(noJumpCooldownEnabled)\r\n    NoJumpCooldownButton.Text = noJumpCooldownEnabled and \"No Jump Cooldown: ON\" or \"No Jump Cooldown: OFF\"\r\n    NoJumpCooldownButton.BackgroundColor3 = noJumpCooldownEnabled and Color3.fromRGB(50, 200, 50) or Color3.fromRGB(80, 80, 80)\r\nend)\r\n\r\n-- Chams Functionality\r\nlocal chamsEnabled = false\r\nlocal highlightColor = Color3.fromRGB(255, 255, 255) -- Default color for chams\r\n\r\nlocal function CreateCham(player)\r\n    local character = player.Character or player.CharacterAdded:Wait()\r\n    if not character:FindFirstChild(\"HumanoidRootPart\") then return end\r\n\r\n    -- Create the highlight object for the player's character\r\n    local highlight = Instance.new(\"Highlight\")\r\n    highlight.Name = \"ChamHighlight\"\r\n    highlight.Parent = character\r\n    highlight.Adornee = character\r\n    highlight.FillColor = highlightColor\r\n    highlight.FillTransparency = 0.5\r\n    highlight.OutlineTransparency = 1\r\n\r\n    -- Clean up when the character is removed\r\n    character:WaitForChild(\"HumanoidRootPart\").AncestryChanged:Connect(function()\r\n        highlight:Destroy()\r\n    end)\r\nend\r\n\r\nlocal function ToggleChams(enabled)\r\n    chamsEnabled = enabled\r\n    if chamsEnabled then\r\n        -- Apply cham effect for players when enabled\r\n        for _, player in pairs(Players:GetPlayers()) do\r\n            if player ~= LocalPlayer and player.Character then\r\n                CreateCham(player)\r\n            end\r\n        end\r\n    else\r\n        -- Remove cham effect for players when disabled\r\n        for _, player in pairs(Players:GetPlayers()) do\r\n            local character = player.Character\r\n            if character then\r\n                local highlight = character:FindFirstChild(\"ChamHighlight\")\r\n                if highlight then\r\n                    highlight:Destroy()\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nChamsButton.MouseButton1Click:Connect(function()\r\n    chamsEnabled = not chamsEnabled\r\n    ToggleChams(chamsEnabled)\r\n    ChamsButton.Text = chamsEnabled and \"Disable Chams\" or \"Enable Chams\"\r\n    ChamsButton.BackgroundColor3 = chamsEnabled and Color3.fromRGB(50, 200, 50) or Color3.fromRGB(80, 80, 80)\r\nend)\r\n\r\n-- Tracers Functionality\r\nlocal tracersEnabled = false\r\nlocal tracerPool = {}\r\nlocal activeTracers = {}\r\n\r\nlocal function GetTracer()\r\n    local tracer = table.remove(tracerPool) -- Reuse if available\r\n    if not tracer then\r\n        tracer = Drawing.new(\"Line\")\r\n        tracer.Visible = false\r\n        tracer.Color = Color3.fromRGB(255, 255, 255)\r\n        tracer.Thickness = 1\r\n        tracer.Transparency = 1\r\n    end\r\n    return tracer\r\nend\r\n\r\nlocal function ReturnTracer(tracer)\r\n    tracer.Visible = false\r\n    table.insert(tracerPool, tracer)\r\nend\r\n\r\nlocal function UpdateTracers()\r\n    if not tracersEnabled then\r\n        for plr, tracer in pairs(activeTracers) do\r\n            ReturnTracer(tracer)\r\n            activeTracers[plr] = nil\r\n        end\r\n        return\r\n    end\r\n\r\n    for _, plr in ipairs(Players:GetPlayers()) do\r\n        if plr ~= player then\r\n            if not activeTracers[plr] then\r\n                activeTracers[plr] = GetTracer()\r\n            end\r\n\r\n            local tracer = activeTracers[plr]\r\n            local char = plr.Character\r\n            if char then\r\n                local rootPart = char:FindFirstChild(\"HumanoidRootPart\")\r\n                local humanoid = char:FindFirstChild(\"Humanoid\")\r\n\r\n                if rootPart and humanoid and humanoid.Health > 0 then\r\n                    local screenPos, onScreen = Camera:WorldToViewportPoint(rootPart.Position)\r\n                    if onScreen then\r\n                        tracer.From = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y)\r\n                        tracer.To = Vector2.new(screenPos.X, screenPos.Y)\r\n                        tracer.Visible = true\r\n                    else\r\n                        tracer.Visible = false\r\n                    end\r\n                else\r\n                    ReturnTracer(tracer)\r\n                    activeTracers[plr] = nil\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nlocal function ToggleTracers(enabled)\r\n    tracersEnabled = enabled\r\n    if tracersEnabled then\r\n        RunService.RenderStepped:Connect(UpdateTracers)\r\n    else\r\n        for plr, tracer in pairs(activeTracers) do\r\n            ReturnTracer(tracer)\r\n            activeTracers[plr] = nil\r\n        end\r\n    end\r\nend\r\n\r\nTracersButton.MouseButton1Click:Connect(function()\r\n    tracersEnabled = not tracersEnabled\r\n    ToggleTracers(tracersEnabled)\r\n    TracersButton.Text = tracersEnabled and \"Disable Tracers\" or \"Enable Tracers\"\r\n    TracersButton.BackgroundColor3 = tracersEnabled and Color3.fromRGB(50, 200, 50) or Color3.fromRGB(80, 80, 80)\r\nend)\r\n\r\n-- Services and Variables\r\nlocal Players = game:GetService(\"Players\")\r\nlocal RunService = game:GetService(\"RunService\")\r\nlocal UserInputService = game:GetService(\"UserInputService\")\r\nlocal Camera = workspace.CurrentCamera\r\nlocal Workspace = game:GetService(\"Workspace\")\r\n\r\nlocal LocalPlayer = Players.LocalPlayer\r\nlocal cursorLocked = false\r\nlocal targetHead = nil\r\nlocal targetPlayer = nil\r\nlocal predictionLevel = 0 -- Default prediction level\r\nlocal smoothness = 0 -- Default smoothness value\r\nlocal currentKeybind = Enum.KeyCode.C\r\n_G.aimlock = false  -- Ensure aimlock state is defined\r\n\r\n-- Function to get the predicted position of the target's head\r\nlocal function GetPredictedPosition(player)\r\n    local character = player.Character\r\n    if character then\r\n        local humanoid = character:FindFirstChild(\"Humanoid\")\r\n        local head = character:FindFirstChild(\"Head\")\r\n        if humanoid and head then\r\n            local velocity = humanoid.RootPart.AssemblyLinearVelocity\r\n            return head.Position + velocity * predictionLevel\r\n        end\r\n    end\r\n    return nil\r\nend\r\n\r\n-- Function to find the closest valid player (excluding self)\r\nlocal function FindClosestPlayerHead()\r\n    local closestPlayer = nil\r\n    local closestDistance = math.huge\r\n    local mousePosition = Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y)\r\n\r\n    for _, player in pairs(Players:GetPlayers()) do\r\n        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild(\"Head\") then\r\n            local character = player.Character\r\n            local humanoid = character:FindFirstChild(\"Humanoid\")\r\n            if humanoid and humanoid.Health > 0 then\r\n                local head = character.Head\r\n                local predictedHeadPosition = GetPredictedPosition(player) or head.Position\r\n                local screenPoint = Camera:WorldToScreenPoint(predictedHeadPosition)\r\n                local distance = (mousePosition - Vector2.new(screenPoint.X, screenPoint.Y)).Magnitude\r\n                if distance \u003C closestDistance then\r\n                    closestDistance = distance\r\n                    closestPlayer = player\r\n                end\r\n            end\r\n        end\r\n    end\r\n\r\n    if closestPlayer then\r\n        return closestPlayer.Character.Head, closestPlayer\r\n    end\r\n    return nil, nil\r\nend\r\n\r\n-- Lock the cursor to the nearest player's head\r\nlocal function LockCursorToHead()\r\n    targetHead, targetPlayer = FindClosestPlayerHead()\r\nend\r\n\r\n-- Unlock the cursor\r\nlocal function UnlockCursor()\r\n    targetHead = nil\r\n    targetPlayer = nil\r\nend\r\n\r\n-- Update loop to smoothly aim at the locked target\r\nRunService.Stepped:Connect(function(_, dt)\r\n    if cursorLocked and _G.aimlock and targetHead then\r\n        local predictedHeadPosition = GetPredictedPosition(targetPlayer) or targetHead.Position\r\n        local alpha = 1 - smoothness\r\n        alpha = math.max(alpha, 0.01)\r\n        Camera.CFrame = Camera.CFrame:Lerp(CFrame.new(Camera.CFrame.Position, predictedHeadPosition), alpha)\r\n    end\r\nend)\r\n\r\n-- Handle key press (C) for toggling aimlock\r\nUserInputService.InputBegan:Connect(function(input, gameProcessed)\r\n    if gameProcessed then return end\r\n    if input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == currentKeybind then\r\n        if _G.aimlock then\r\n            cursorLocked = not cursorLocked\r\n            if cursorLocked then\r\n                LockCursorToHead()\r\n            else\r\n                UnlockCursor()\r\n            end\r\n        end\r\n    end\r\nend)\r\n\r\nAimlockButton.MouseButton1Click:Connect(function()\r\n    _G.aimlock = not _G.aimlock\r\n    cursorLocked = false\r\n    if _G.aimlock then\r\n        AimlockButton.Text = \"Disable Aimlock\"\r\n    else\r\n        AimlockButton.Text = \"Enable Aimlock\"\r\n        UnlockCursor()\r\n    end\r\n    print(\"Aimlock toggled:\", _G.aimlock)\r\nend)"
